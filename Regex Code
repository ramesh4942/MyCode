"""Project:
           Phone Numbers and Email Address Extractor


Review of Regex Symbols

The ? matches zero or one of the preceding group.
The * matches zero or more of the preceding group.
The + matches one or more of the preceding group.
The {n} matches exactly n of the preceding group.
The {n,} matches n or more of the preceding group.
The {,m} matches 0 to m of the preceding group.
The {n,m} matches at least n and at most m of the preceding group.
{n,m}? or *? or +? performs a non-greedy match of the preceding group.
^spam means the string must begin with spam.
spam$ means the string must end with spam.
The . matches any character, except newline characters.
\d, \w, and \s match a digit, word, or space character, respectively.
\D, \W, and \S match anything except a digit, word, or space character, respectively.
[abc] matches any character between the brackets (such as a, b, or c).
[^abc] matches any character that isn’t between the brackets.

\d  -- Any numeric digit from 0 to 9.
\D  -- Any character that is not a numeric digit from 0 to 9.
\w  -- Any letter, numeric digit, or the underscore character. (Think of this as matching “word” characters.)
\W  -- Any character that is not a letter, numeric digit, or the underscore character.
\s  -- Any space, tab, or newline character. (Think of this as matching “space” characters.)
\S  -- Any character that is not a space, tab, or newline.

"""

import pyperclip, re
#Create Phone Regex
text = str(pyperclip.paste())

phoneRegex = re.compile(r'''(

(\d{3}|\(\d{3}\))?     #area_code
(\s|-|\.)?             #seperator
(\d{3})                #first 3 digits
(\s|-|\.)?             #seperator
(\d{4})                #first 4 digits
(\s*(ext|x|ext.)\s*(\d{2,5}))?  #extension
)''', re.VERBOSE)

#create email regex

emailRegex = re.compile(r'''(
[a-zA-Z0-9.%+-]+  #username
@                 #@ Symbol 
[a-zA-Z0-9.-]+    #domain name
(\.[a-zA-Z]{2,4}) #dot-something
)''', re.VERBOSE)

#Find matches in the clipboard text.

matches = []
for groups in phoneRegex.findall(text):
    phoneNum = '-'.join([groups[1],groups[3],groups[5]])
    if groups[8] != '':
        phoneNum = phoneNum + ' x' + groups[8]
    matches.append(phoneNum)
for groups in emailRegex.findall(text):
       matches.append(groups[0])

# Copy results to the clipboard.
if len(matches) > 0:
    pyperclip.copy('\n'.join(matches))
    print('Copied to clipboard:')
    print('\n'.join(matches))
else:
    print('No phone numbers or email addresses found.')
